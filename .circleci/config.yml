# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
references:
  dockerhub_credentials: &dockerhub_credentials
    auth:
      username: $DOCKERHUB_USER
      password: $DOCKERHUB_PASSWORD

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:3.0.0
        <<: *dockerhub_credentials
        environment:
          BUNDLER_VERSION: 2.2.5
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:10.14
        <<: *dockerhub_credentials
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: edelweiss_test
          POSTGRES_INITDB_ARGS: "--encoding=UTF8 --no-locale"
          LANG: ja_JP.UTF-8

    working_directory: ~/repo

    steps:
      - checkout

      # Setup bundler 2+
      - run:
          name: setup bundler
          command: |
            gem update --system
            gem uninstall bundler
            rm /usr/local/bin/bundle
            rm /usr/local/bin/bundler
            gem install bundler

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
            - missions_app-yarn-{{ checksum "yarn.lock" }}
            - missions_app-yarn-

      # - run:
      #     name: yarn install
      #     command: yarn install --cache-folder ~/.cache/yarn
      #
      # - save_cache:
      #     key: missions_app-yarn-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/.cache/yarn

      # Database setup
      - run: bundle exec rake db:create db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
